// Proof of the Axiom of Choice using the explicit witness as provided by
// the constructive existential quantifier.

// Assume that A and B are types.
constant A : Type
constant B : Type

// Assume that R is a binary relation on A x B.
constant R : ∏ (_ : A) (_ : B), Prop
// Further assume that every (a : A) is related to some (b : B).
axiom R_left_total : ∀ (a : A), ∃ (b : B), R a b

// We define a choice function using the explicit witness provided by the
// constructive existential quantifier.
def f := λ (a : A) =>
  let exists_b_Rab := R_left_total a in
  fst exists_b_Rab

// pf is a proof that given an arbitrary (a : A), a is really related to (f a). 
def pf := λ (a : A) => snd (R_left_total a)

// Use f and pf to witness the existential below.
check ((f, pf) : ∃ (f : ∏ (_ : A), B), ∀ (a : A), R a (f a))